#!/usr/bin/env node
'use strict';

const app     = require('../app');
const cluster = require('cluster');
const numCPUs = require('os').cpus().length;
const debug   = require('debug')('livro_nodejs:www');

let onWorkerError = function(code, signal) {
  debug(code, signal);
  Logger.error('Worker error', 'code: ' + code + ' signal:' +signal);
};

if (cluster.isMaster) {
  for (let i = 0; i < numCPUs; i++) {
    let worker = cluster.fork();
    worker.on('error', onWorkerError);
  }

  cluster.on('exit', function(err) {
    let newWorker = cluster.fork();
    newWorker.on('error', onWorkerError);
    debug('A new worker rises', newWorker.process.pid);
  });
} else {
  let server = app.listen(3000, function() {
    var address = server.address();
    debug('Example app listening at http://%s:%s', address.address, address.port);
  });
  server.on('error', function(err) {
    debug(err);
  });
}
